#! /usr/bin/ruby1.9.1
#-*- encoding: utf-8 -*-
#
# Description: RSS feed reader with built-in dictionary lookup
# Author:      Tobias Koch <tobias.koch@gmail.com>
# License:     Public Domain
#

INSTALL_DIR = File.expand_path(File.dirname(File.symlink?(__FILE__) ?
  File.readlink(__FILE__) : __FILE__) + '/..')
$LOAD_PATH.unshift INSTALL_DIR + '/lib'

TRRSS_SUCCESS          = 0
TRRSS_ERROR_INVOCATION = 1
TRRSS_ERROR_RUNTIME    = 2

EXECUTABLE_NAME = File.basename($0)

require 'version'
require 'getoptlong'
require 'tr_rss'


def usage
  $stderr.write "TR Language Tools RSS feed reader, version #{TRTOOLS_VERSION}                    \n"
  $stderr.write "Copyright 2012, Tobias Koch <tobias.koch@gmail.com>                              \n"
  $stderr.write "                                                                                 \n"
  $stderr.write "#{EXECUTABLE_NAME} [OPTIONS] provider                                            \n"
  $stderr.write "                                                                                 \n"
  $stderr.write "PROVIDERS:                                                                       \n"
  RSSFeedCore::available_providers.each do |p|
   $stderr.write " * #{p}                                                                         \n"
  end
  $stderr.write "                                                                                 \n"
  $stderr.write "OPTIONS:                                                                         \n"
  $stderr.write " --help, -h               Print this help text and exit                          \n"
  $stderr.rwite " --num, -n <limit>        Limit number of articles to download                   \n"               
  $stderr.write "                                                                                 \n"
end


def parse_cmd_line
  params = { :limit => 0 }

  opts = GetoptLong.new(
    ['--help', '-h', GetoptLong::NO_ARGUMENT ],
    ['--num', '-n', GetoptLong::REQUIRED_ARGUMENT ]
  )

  begin
    opts.quiet = true
    opts.each do |opt, arg|
      case opt
        when '--help'
          usage
          exit TRRSS_SUCCESS
        when '--num'
          unless arg =~ /\d+/
            msg = "not a valid numeric limit '#{arg}'"
            raise GetoptLong::InvalidOption, msg
          end
          params[:limit] = arg.to_i
        else
      end
    end
  rescue GetoptLong::InvalidOption => e
    $stderr.write "#{EXECUTABLE_NAME}: #{e.message}\n"
    exit TRRSS_ERROR_INVOCATION
  end

  if ARGV.length != 1
    $stderr.write "#{EXECUTABLE_NAME}: no provider specified\n"
    exit TRRSS_ERROR_INVOCATION
  end

  return params
end


begin # main()

  # PARSE CMD LINE
  params = parse_cmd_line

  # CREATE RSS FEED READER
  unless provider = RSSFeedCore::create(ARGV[0], params)
    raise RSSFeedCore::Error, "unknown RSS feed provider '#{ARGV[0]}'"
  end

  result = provider.retrieve_rss
  puts result

rescue SystemExit => e
  exit e.status
rescue Exception => e
  raise
  $stderr.write "#{EXECUTABLE_NAME}: #{e.message}\n"
  exit TRRSS_ERROR_RUNTIME
end

